name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
          check-latest: true

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          # Create dist directory if it doesn't exist
          mkdir -p dist
          
          # Set output binary name with extension for Windows
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME=icon-converter_${{ matrix.goos }}_${{ matrix.goarch }}.exe
          else
            BINARY_NAME=icon-converter_${{ matrix.goos }}_${{ matrix.goarch }}
          fi
          
          # Build the binary
          go build -o "dist/${BINARY_NAME}" -v
          
          # Create a checksum file
          cd dist && sha256sum "${BINARY_NAME}" > "${BINARY_NAME}.sha256"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: icon-converter_${{ matrix.goos }}_${{ matrix.goarch }}
          path: dist/icon-converter_${{ matrix.goos }}_${{ matrix.goarch }}*
          retention-days: 5

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
      
      - name: List artifacts
        run: ls -R artifacts
      
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 